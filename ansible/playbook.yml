---
- name: Quarantine Craft
  hosts: test
  # hosts: main
  collections:
    - nginxinc.nginx_core
    - ansible.posix
    - community.general
  vars:
    srv:
      tmux:
        session_name: mc
    packages:
      - nginx
      - jre11-openjdk-headless
      - tmux
      - s-tui
  tasks:
    # - name: Install required packages
    #   loop: "{{ packages }}"
    #   become: true
    #   community.general.pacman:
    #     state: present
    #     name: "{{ item }}"
    - name: Configure Minecraft server and plugins
      include_role:
        name: paper
    # - name: Build LiveAtlas app
    #   delegate_to: localhost
    #   become: no
    #   connection: local
    #   ansible.builtin.shell:
    #     cmd: npm run build
    #     chdir: "{{ playbook_dir }}/../upstream/liveatlas"
    #     creates: "{{ playbook_dir }}/../upstream/liveatlas/dist"
    # - name: Configure webserver
    #   include_role:
    #     name: nginx_config
    #   vars:
    #     nginx_config_cleanup: false
    #     nginx_config_debug_output: true
    #     nginx_config_debug_tasks: true
    #     nginx_config_main_template:
    #       worker_processes: 1
    #       worker_connections: 1024
    #       http_enable: true
    #       http_settings:
    #         sendfile: true
    #         keepalive_timeout: 65
    #     nginx_config_http_template:
    #       - template_file: http/default.conf.j2
    #         conf_file_name: "{{ fqdn }}.conf"
    #         conf_file_location: /etc/nginx/conf.d/
    #         servers:
    #           - server_name: "{{ fqdn }}"
    #             listen:
    #               port: 443
    #               ssl: true
    #             ssl:
    #               cert: "{{ web.letsencrypt_certs_dir }}/fullchain.pem"
    #               key: "{{ web.letsencrypt_certs_dir }}/privkey.pem"
    #               dhparam: /etc/letsencrypt/ssl-dhparams.pem
    #             include_files:
    #               - /etc/letsencrypt/options-ssl-nginx.conf
    #             auth_basic: "{{ title }}"
    #             # This passwd file is created manually
    #             auth_basic_user_file: /etc/nginx/.mcpasswd
    #             locations:
    #               - location: /
    #                 root: "{{  }}"
