---
- name: Quarantine Craft
  hosts: test
  # hosts: main
  collections:
    - nginxinc.nginx_core
    - ansible.posix
    - community.general
  tasks:
    - name: Install required packages
      loop: "{{ packages }}"
      become: yes
      community.general.pacman:
        state: present
        name: "{{ item }}"
      vars:
        packages:
          - nginx
          - jre11-openjdk-headless
          - tmux
          - s-tui

    - name: Create /etc/default/minecraft
      become: yes
      ansible.builtin.template:
        src: "{{ playbook_dir }}/templates/etc_default_minecraft"
        dest: /etc/default/minecraft
        owner: root
        group: root
        mode: '0644'
      vars:
        etc_default_minecraft:
          OVERLAY_DIR: "{{ srv_overlay_dir }}"
          CONFIG_DIR: "{{ srv_config_dir }}"
          DATA_DIR: "{{ srv_data_dir }}"
          BACKUP_DIR: "{{ srv_backup_dir }}"

    - name: Configure Minecraft server and plugins
      include_role:
        name: paper

    - name: Configure Web server
      include_role:
        name: web

    - name: Configure nginx
      include_role:
        name: nginx_config
      vars:
        ansible_become: yes
        nginx_config_cleanup: yes
        nginx_config_debug_output: no
        nginx_config_debug_tasks: no
        nginx_config_main_template_enable: yes
        nginx_config_http_template_enable: yes
        nginx_config_main_template:
          user: nobody
          pid: /run/nginx.pid
          worker_processes: 1
          worker_connections: 1024
          http_enable: yes
          stream_enable: false
          http_settings:
            access_log_format:
              - name: main
                format: |-
                  '$remote_addr - $remote_user [$time_local] "$request" '
                  '$status $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for"'

            access_log_location:
              - name: main
                location: /var/log/nginx/access.log
            sendfile: yes
            tcp_nopush: true
            tcp_nodelay: true
            keepalive_timeout: 65
            cache: false
            rate_limit: false
            keyval: false
        nginx_config_http_template:
          default:
            conf_file_name: "{{ web_fqdn }}.conf"
            servers:
              default:
                server_name: _
                listen:
                  listen_localhost:
                    port: 80
                    ssl: false
                    # port: 443
                    # ssl: yes
                web_server:
                  locations:
                    home:
                      location: /
                      html_file_location: "{{ web_root_dir }}/app"
                    atlas:
                      location: /atlas
                      html_file_location: "{{ web_root_dir }}"
                      # try_files: $uri $uri/index.html $uri.html =404
                      auth_basic: "{{ title }}"
                      auth_basic_user_file: /etc/nginx/.mcpasswd
                # ssl:
                #   cert: "{{ web_certs_dir }}/fullchain.pem"
                #   key: "{{ web_certs_dir }}/privkey.pem"
                #   dhparam: /etc/letsencrypt/ssl-dhparams.pem
                # include_files:
                #   - /etc/letsencrypt/options-ssl-nginx.conf
