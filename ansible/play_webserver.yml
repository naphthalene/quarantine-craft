---
- name: Webserver deployment
  hosts: all
  collections:
    - nginxinc.nginx_core
    - ansible.posix
    - community.general
  vars:
    nginx_locations:
      # root: "{{ web_root_dir }}"
      locations:
        # Main server app
        home:
          location: /
          html_file_location: "{{ web_root_dir }}/app"

        # Static API files served from its own directory
        api:
          location: /api
          html_file_location: "{{ web_root_dir }}"
          try_files: '$uri $uri.json =404'
          add_headers:
            header_name:
              name: Content-Type
              value: application/json
              always: true

        # LiveServer dynmap extension
        atlas:
          location: /atlas
          html_file_location: "{{ web_root_dir }}"
          auth_basic: "{{ title }}"
          auth_basic_user_file: /etc/nginx/.mcpasswd

    nginx_server:
      http:
        server_name: "{{ web_fqdn }}"
        listen:
          listen_localhost:
            port: 80

      https:
        server_name: "{{ web_fqdn }}"
        listen:
          listen_localhost:
            port: 443
            ssl: yes
        ssl:
          cert: "{{ web_certs_dir }}/fullchain.pem"
          key: "{{ web_certs_dir }}/privkey.pem"
          dhparam: /etc/letsencrypt/ssl-dhparams.pem
        include_files:
          - /etc/letsencrypt/options-ssl-nginx.conf

  tasks:
    - name: Deploy and configure web content
      include_role:
        name: web

    - name: Deploy API generator/scraper
      include_role:
        name: scraper

    - name: Configure nginx
      include_role:
        name: nginx_config
      vars:
        ansible_become: yes
        nginx_config_cleanup: yes
        nginx_config_debug_output: no
        nginx_config_debug_tasks: no
        nginx_config_main_template_enable: yes
        nginx_config_http_template_enable: yes
        nginx_config_main_template:
          user: nobody
          pid: /run/nginx.pid
          worker_processes: 1
          worker_connections: 1024
          http_enable: yes
          stream_enable: false
          http_settings:
            access_log_format:
              - name: main
                format: |-
                  '$remote_addr - $remote_user [$time_local] "$request" '
                  '$status $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for"'

            access_log_location:
              - name: main
                location: /var/log/nginx/access.log
            sendfile: yes
            tcp_nopush: true
            tcp_nodelay: true
            keepalive_timeout: 65
            cache: false
            rate_limit: false
            keyval: false
        nginx_config_http_template:
          default:
            servers:
              default: "{{ nginx_server['https' if web_ssl is true else 'http'] | combine({'web_server': nginx_locations}, recursive=True) }}"
